# Generated by Django 4.2.3 on 2024-07-02 08:11

import datetime
import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='FindovioAdvertisement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('forceVisibility', models.BooleanField(default=False)),
                ('url', models.URLField()),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FirebaseUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firebase_name', models.CharField(max_length=40)),
                ('firebase_email', models.CharField(max_length=80)),
                ('firebase_uid', models.CharField(max_length=100, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='KeywordsCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=255, unique=True)),
                ('count', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('kind_of_license', models.IntegerField(choices=[(0, 'Free'), (1, 'Pro'), (2, 'Premium')], default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('plan_type', models.IntegerField(choices=[(0, 'Monthly'), (1, 'Annual')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_free', models.BooleanField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address_city', models.CharField(max_length=100)),
                ('address_postal_code', models.CharField(max_length=20)),
                ('address_street', models.CharField(max_length=100)),
                ('address_number', models.CharField(max_length=10)),
                ('location', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0), srid=4326)),
                ('about', models.TextField(max_length=200)),
                ('avatar', models.URLField(blank=True, default='', max_length=120, null=True)),
                ('gallery', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, default=list, size=None)),
                ('phone_number', models.CharField(default='', max_length=20)),
                ('distance_from_query', models.FloatField(blank=True, default=1.0, null=True)),
                ('error_code', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flutter_category', models.CharField(choices=[('Fryzjer', 'Hairdresser'), ('Paznokcie', 'Nails'), ('Masaż', 'Massage'), ('Barber', 'Barber'), ('Makijaż', 'Makeup'), ('Pielęgnacja dłoni', 'Pedicure'), ('Pielęgnacja stóp', 'Manicure')], default='hairdresser', max_length=30)),
                ('flutter_gender_type', models.CharField(choices=[('man', 'man'), ('woman', 'woman'), ('both', 'both')], default='both', max_length=8)),
                ('codes', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(choices=[(0, 'Nowy'), (1, 'Numer zweryfikowany'), (2, 'Salon zweryfikowany'), (3, 'Język angielski'), (4, 'Polecany'), (5, 'Ma galerię'), (6, 'Opcja dojazdu'), (7, 'Dla dzieci')]), blank=True, default=list, size=None)),
                ('email', models.EmailField(blank=True, default='', max_length=60, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalonImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salon_id', models.IntegerField()),
                ('image', models.ImageField(null=True, upload_to='salon_images')),
                ('image_type', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SalonImageFinal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salon_id', models.IntegerField()),
                ('image', models.ImageField(null=True, upload_to='salon_images')),
                ('image_type', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=101)),
                ('description', models.TextField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('duration_minutes', models.PositiveIntegerField(default='')),
                ('duration_temp', models.DurationField(default=datetime.timedelta(seconds=1800))),
                ('is_available', models.BooleanField(default=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='findoviodb.category')),
                ('salon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salon_categories', to='findoviodb.salon')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(default='', max_length=500)),
                ('image_url', models.URLField(blank=True, default='', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='findoviodb.salon')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('kind_of_license', models.IntegerField(choices=[(0, 'Free'), (1, 'Pro'), (2, 'Premium')])),
                ('kind_of_payment', models.IntegerField(choices=[(0, 'Monthly'), (1, 'Annual')])),
                ('license', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='findoviodb.license')),
            ],
        ),
        migrations.CreateModel(
            name='GeneratedTimeSlots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_from', models.TimeField()),
                ('time_to', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findoviodb.salon')),
            ],
        ),
        migrations.CreateModel(
            name='FixedOperatingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField()),
                ('open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('time_slot_length', models.IntegerField(default=20)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findoviodb.salon')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='salon',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='findoviodb.salon'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.CharField(max_length=255)),
                ('date_of_booking', models.DateField(blank=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('C', 'Confirmed'), ('F', 'Finished'), ('X', 'Cancelled')], default='X', max_length=22)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findoviodb.salon')),
                ('services', models.ManyToManyField(to='findoviodb.service')),
                ('timeslots', models.ManyToManyField(to='findoviodb.generatedtimeslots')),
            ],
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_style', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=1)),
                ('promotion_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3')], default=1)),
                ('Title_line_1', models.CharField(max_length=30)),
                ('Title_line_2', models.CharField(blank=True, max_length=50)),
                ('Text_line_1', models.CharField(max_length=30)),
                ('Text_line_2', models.CharField(blank=True, max_length=50)),
                ('Special_text', models.CharField(blank=True, max_length=20)),
                ('Date_of_order', models.DateTimeField(default=django.utils.timezone.now)),
                ('Date_start', models.DateField()),
                ('Date_end', models.DateField()),
                ('promotion_price', models.FloatField()),
                ('image', models.URLField()),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findoviodb.salon')),
            ],
        ),
        migrations.CreateModel(
            name='UnFixedOperatingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('time_slot_length', models.IntegerField(default=20)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findoviodb.salon')),
            ],
            options={
                'unique_together': {('salon', 'date')},
            },
        ),
        migrations.CreateModel(
            name='TempTimeSlots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_from', models.TimeField()),
                ('time_to', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findoviodb.salon')),
            ],
            options={
                'unique_together': {('salon', 'date', 'time_from', 'time_to')},
            },
        ),
        migrations.AddIndex(
            model_name='generatedtimeslots',
            index=models.Index(fields=['salon'], name='salon_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='generatedtimeslots',
            unique_together={('salon', 'date', 'time_from', 'time_to')},
        ),
        migrations.AlterUniqueTogether(
            name='fixedoperatinghours',
            unique_together={('salon', 'day_of_week')},
        ),
    ]
